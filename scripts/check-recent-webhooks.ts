#!/usr/bin/env npx tsx

import { db } from '../src/lib/db';

async function checkRecentWebhooks() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ webhook –∑–∞–ø—Ä–æ—Å—ã');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 webhook –ª–æ–≥–æ–≤
    const logs = await db.webhookLog.findMany({
      orderBy: { createdAt: 'desc' },
      take: 10,
      include: {
        project: true
      }
    });

    if (logs.length === 0) {
      console.log('‚ùå Webhook –ª–æ–≥–æ–≤ –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ª–æ–≥–æ–≤: ${logs.length}`);

      for (const log of logs) {
        console.log(`\nüìã –õ–æ–≥ ${log.id}:`);
        console.log(`  –í—Ä–µ–º—è: ${log.createdAt}`);
        console.log(`  –ü—Ä–æ–µ–∫—Ç: ${log.project?.name} (${log.projectId})`);
        console.log(`  –°—Ç–∞—Ç—É—Å: ${log.status} ${log.success ? '‚úÖ' : '‚ùå'}`);
        console.log(`  Method: ${log.method}`);
        console.log(`  Endpoint: ${log.endpoint}`);

        if (log.body) {
          const body = log.body as any;
          console.log(`  Email: ${body?.Email || body?.email || '–Ω–µ—Ç'}`);
          console.log(
            `  –ü—Ä–æ–º–æ–∫–æ–¥: ${body?.payment?.promocode || body?.promocode || '–Ω–µ—Ç'}`
          );
          console.log(`  appliedBonuses: ${body?.appliedBonuses || '–Ω–µ—Ç'}`);
          console.log(
            `  OrderID: ${body?.payment?.orderid || body?.orderid || '–Ω–µ—Ç'}`
          );

          // –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
          const bodyStr = JSON.stringify(body);
          console.log(
            `  Body (–ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤): ${bodyStr.substring(0, 300)}${bodyStr.length > 300 ? '...' : ''}`
          );
        }

        if (log.response) {
          const respStr = JSON.stringify(log.response);
          console.log(
            `  Response (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): ${respStr.substring(0, 200)}${respStr.length > 200 ? '...' : ''}`
          );
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook secrets –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('\nüîë Webhook secrets –ø—Ä–æ–µ–∫—Ç–æ–≤:');
    const projects = await db.project.findMany({
      select: {
        id: true,
        name: true,
        webhookSecret: true,
        isActive: true
      }
    });

    for (const project of projects) {
      console.log(
        `  ${project.name}: https://gupil.ru/api/webhook/${project.webhookSecret} (${project.isActive ? '–∞–∫—Ç–∏–≤–µ–Ω' : '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω'})`
      );
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await db.$disconnect();
  }
}

checkRecentWebhooks();
