/**
 * @file: test-specific-user.ts
 * @description: –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @project: SaaS Bonus System
 * @dependencies: fetch
 * @created: 2025-01-31
 * @author: AI Assistant + User
 */

async function testSpecificUser() {
  try {
    const projectId = 'cmdkloj85000cv8o0611rblp3';
    const userId = 'cme01k6pv0001v8nwgz62sxma'; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegramId: 987654321

    console.log('üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é...');
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);

    const payload = {
      message: '–¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!',
      userIds: [userId]
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...');

    const response = await fetch(
      `http://localhost:5006/api/projects/${projectId}/notifications`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(payload)
      }
    );

    console.log('üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);

    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:', JSON.stringify(result, null, 2));
    } else {
      const errorText = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞:', errorText);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

testSpecificUser();
