/**
 * @file: scripts/check-migration.ts
 * @description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏
 * @project: SaaS Bonus System
 * @dependencies: Prisma, Database
 * @created: 2024-12-31
 * @author: AI Assistant + User
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkMigration() {
  const projectId = process.argv[2] || 'cmfa8oqx000019e372pk9547l';

  console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ${projectId}`);

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ
    const totalUsers = await prisma.user.count({
      where: { projectId }
    });

    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ: ${totalUsers}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –±–æ–Ω—É—Å–∞–º–∏
    const usersWithBonuses = await prisma.user.count({
      where: {
        projectId,
        currentBonusBalance: { gt: 0 }
      }
    });

    console.log(`üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –±–æ–Ω—É—Å–∞–º–∏: ${usersWithBonuses}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const recentUsers = await prisma.user.findMany({
      where: { projectId },
      orderBy: { createdAt: 'desc' },
      take: 5,
      select: {
        id: true,
        firstName: true,
        lastName: true,
        email: true,
        phone: true,
        currentBonusBalance: true,
        createdAt: true
      }
    });

    console.log('\nüÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    recentUsers.forEach((user, index) => {
      console.log(
        `${index + 1}. ${user.firstName} ${user.lastName || ''} (${user.email}) - ${user.currentBonusBalance}‚ÇΩ`
      );
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const totalTransactions = await prisma.transaction.count({
      where: {
        user: { projectId }
      }
    });

    console.log(`\nüí∏ –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${totalTransactions}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ–Ω—É—Å—ã
    const totalBonuses = await prisma.bonus.count({
      where: {
        user: { projectId }
      }
    });

    console.log(`üéÅ –í—Å–µ–≥–æ –±–æ–Ω—É—Å–æ–≤: ${totalBonuses}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkMigration();
