/**
 * @file: scripts/test-api.ts
 * @description: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
 * @project: SaaS Bonus System
 * @dependencies: Node.js fetch
 * @created: 2024-12-31
 * @author: AI Assistant + User
 */

async function testAPI() {
  const baseUrl = 'http://localhost:5006'; // –∏–ª–∏ https://gupil.ru –µ—Å–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  const projectId = 'cmfa8oqx000019e372pk9547l';

  console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API: ${baseUrl}`);
  console.log(`üè¢ –ü—Ä–æ–µ–∫—Ç: ${projectId}`);

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    console.log('\nüì° –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API');
    const healthResponse = await fetch(`${baseUrl}/api/health`);
    console.log(
      `–ó–¥–æ—Ä–æ–≤—å–µ API: ${healthResponse.status} ${healthResponse.statusText}`
    );

    // –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('\nüë• –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)');
    const usersResponse = await fetch(
      `${baseUrl}/api/projects/${projectId}/users?page=1&limit=5`
    );
    console.log(
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ API: ${usersResponse.status} ${usersResponse.statusText}`
    );

    if (usersResponse.status === 401) {
      console.log('‚ùå API —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏');
    } else if (usersResponse.status === 200) {
      const data = await usersResponse.json();
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${data.users?.length || 0}`);
      console.log(`üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${data.totalPages || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    } else {
      const errorText = await usersResponse.text();
      console.log(`‚ùå –û—à–∏–±–∫–∞ API: ${errorText}`);
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('\nüèóÔ∏è –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ');
    const projectResponse = await fetch(`${baseUrl}/api/projects/${projectId}`);
    console.log(
      `–ü—Ä–æ–µ–∫—Ç API: ${projectResponse.status} ${projectResponse.statusText}`
    );

    if (projectResponse.status === 200) {
      const projectData = await projectResponse.json();
      console.log(`‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: ${projectData.data?.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error.message);
  }
}

testAPI();
