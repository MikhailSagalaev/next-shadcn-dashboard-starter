/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –±–æ—Ç–æ–≤
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–Ω–æ–≤–æ
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  try {
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤...\n');

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã —Å –±–æ—Ç–∞–º–∏
    const projects = await prisma.project.findMany({
      where: {
        isActive: true,
        botStatus: 'running'
      },
      select: {
        id: true,
        name: true,
        botToken: true
      }
    });

    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤: ${projects.length}\n`);

    for (const project of projects) {
      console.log(`ü§ñ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ${project.name}`);
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
      await fetch(`http://localhost:3000/api/projects/${project.id}/bot/stop`, {
        method: 'POST'
      });
      
      console.log('   ‚è∏Ô∏è  –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      
      // –ñ–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
      await fetch(`http://localhost:3000/api/projects/${project.id}/bot/start`, {
        method: 'POST'
      });
      
      console.log('   ‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
    }

    console.log('\n‚úÖ –í—Å–µ –±–æ—Ç—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

main();

