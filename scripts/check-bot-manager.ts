/**
 * @file: check-bot-manager.ts
 * @description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è botManager
 * @project: SaaS Bonus System
 * @dependencies: @/lib/telegram/bot-manager
 * @created: 2025-01-31
 * @author: AI Assistant + User
 */

import { botManager } from '../src/lib/telegram/bot-manager';

async function checkBotManager() {
  try {
    const projectId = 'cmdkloj85000cv8o0611rblp3';

    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ botManager...');

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = botManager.getStats();
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ botManager:', stats);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –±–æ—Ç
    const bot = botManager.getBot(projectId);
    console.log(
      'ü§ñ –ë–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞:',
      bot
        ? {
            isActive: bot.isActive,
            isPolling: bot.isPolling,
            lastUpdated: bot.lastUpdated
          }
        : '–ù–µ –Ω–∞–π–¥–µ–Ω'
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Ç–∞
    const health = await botManager.checkBotHealth(projectId);
    console.log('üè• –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Ç–∞:', health);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

checkBotManager();
