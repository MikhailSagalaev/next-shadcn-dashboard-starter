/**
 * @file: global-error-handler.ts
 * @description: –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ unhandled rejections –¥–ª—è –±–æ—Ç–æ–≤
 * @project: SaaS Bonus System
 * @dependencies: logger
 * @created: 2025-01-31
 * @author: AI Assistant + User
 */

import { logger } from '@/lib/logger';

/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è unhandled rejections
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ 409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ Grammy
 */
export function setupGlobalErrorHandler(): void {
  if (typeof process !== 'undefined') {
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º unhandled rejections
    process.on('unhandledRejection', (reason: any, promise: Promise<any>) => {
      const errorMessage =
        reason instanceof Error ? reason.message : String(reason);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ 409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–º Grammy
      if (
        errorMessage.includes('409') ||
        errorMessage.includes('terminated by other getUpdates') ||
        errorMessage.includes('GrammyError')
      ) {
        logger.warn('üö® –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω 409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç Grammy', {
          error: errorMessage,
          type: 'unhandledRejection',
          component: 'global-error-handler'
        });

        // –ù–ï –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è 409 –æ—à–∏–±–æ–∫
        return;
      }

      // –õ–æ–≥–∏—Ä—É–µ–º —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—à–∏–±–∫–∏
      logger.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞', {
        error: errorMessage,
        stack: reason instanceof Error ? reason.stack : undefined,
        type: 'unhandledRejection',
        component: 'global-error-handler'
      });

      // –î–ª—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—à–∏–±–æ–∫ –º–æ–∂–µ–º –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
      // process.exit(1);
    });

    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º uncaught exceptions
    process.on('uncaughtException', (error: Error) => {
      const errorMessage = error.message;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ 409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–º Grammy
      if (
        errorMessage.includes('409') ||
        errorMessage.includes('terminated by other getUpdates') ||
        errorMessage.includes('GrammyError')
      ) {
        logger.warn('üö® –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ 409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ Grammy', {
          error: errorMessage,
          stack: error.stack,
          type: 'uncaughtException',
          component: 'global-error-handler'
        });

        // –ù–ï –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è 409 –æ—à–∏–±–æ–∫
        return;
      }

      // –õ–æ–≥–∏—Ä—É–µ–º —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—à–∏–±–∫–∏
      logger.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ', {
        error: errorMessage,
        stack: error.stack,
        type: 'uncaughtException',
        component: 'global-error-handler'
      });

      // –î–ª—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
      process.exit(1);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.on('SIGTERM', () => {
      logger.info('üì¥ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –Ω–∞—á–∏–Ω–∞–µ–º graceful shutdown', {
        component: 'global-error-handler'
      });

      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –±–æ—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
      try {
        const { botManager } = require('@/lib/telegram/bot-manager');
        botManager.emergencyStopAll();
        logger.info('‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º', {
          component: 'global-error-handler'
        });
      } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏', {
          error: error instanceof Error ? error.message : 'Unknown error',
          component: 'global-error-handler'
        });
      }

      process.exit(0);
    });

    process.on('SIGINT', () => {
      logger.info('üì¥ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –Ω–∞—á–∏–Ω–∞–µ–º graceful shutdown', {
        component: 'global-error-handler'
      });

      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –±–æ—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
      try {
        const { botManager } = require('@/lib/telegram/bot-manager');
        botManager.emergencyStopAll();
        logger.info('‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º', {
          component: 'global-error-handler'
        });
      } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏', {
          error: error instanceof Error ? error.message : 'Unknown error',
          component: 'global-error-handler'
        });
      }

      process.exit(0);
    });

    logger.info('üõ°Ô∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', {
      component: 'global-error-handler',
      features: ['unhandledRejection', 'uncaughtException', 'SIGTERM', 'SIGINT']
    });
  }
}

/**
 * –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–æ—Ç–∞–º–∏
 */
export async function safeExecute<T>(
  operation: () => Promise<T>,
  context: string
): Promise<T | null> {
  try {
    return await operation();
  } catch (error) {
    const errorMessage = error instanceof Error ? error.message : String(error);

    if (
      errorMessage.includes('409') ||
      errorMessage.includes('terminated by other getUpdates')
    ) {
      logger.warn(`409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç –≤ ${context}`, {
        error: errorMessage,
        context,
        component: 'global-error-handler'
      });
      return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
    }

    // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—à–∏–±–∫–∏
    throw error;
  }
}
