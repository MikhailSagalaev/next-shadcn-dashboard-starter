/* Bot Constructor Styles */
/* React Flow custom theme to match HeroUI design */

.react-flow__node {
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.react-flow__node.selected {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
}

.react-flow__node:hover {
  border-color: hsl(var(--primary));
}

.react-flow__edge {
  stroke: hsl(var(--muted-foreground));
}

.react-flow__edge.selected {
  stroke: hsl(var(--primary));
}

.react-flow__edge.animated {
  stroke-dasharray: 5, 5;
  animation: dash 1s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: -10;
  }
}

.react-flow__controls {
  bottom: 20px;
  left: 20px;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card));
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.react-flow__controls button {
  border-radius: calc(var(--radius) - 2px);
  border: none;
  background: hsl(var(--background));
  color: hsl(var(--foreground));
  transition: all 0.2s ease;
}

.react-flow__controls button:hover {
  background: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.react-flow__controls button:active {
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.react-flow__minimap {
  bottom: 20px;
  right: 20px;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card));
  overflow: hidden;
}

.react-flow__minimap-mask {
  fill: hsl(var(--primary) / 0.1);
  stroke: hsl(var(--primary));
}

.react-flow__minimap-node {
  fill: hsl(var(--card));
  stroke: hsl(var(--border));
  stroke-width: 1;
}

/* Dark mode adjustments */
.dark .react-flow__node {
  background: hsl(var(--card));
  border-color: hsl(var(--border));
  color: hsl(var(--card-foreground));
}

.dark .react-flow__edge {
  stroke: hsl(var(--muted-foreground));
}

.dark .react-flow__controls {
  background: hsl(var(--card));
  border-color: hsl(var(--border));
}

.dark .react-flow__controls button {
  background: hsl(var(--background));
  color: hsl(var(--foreground));
}

.dark .react-flow__minimap {
  background: hsl(var(--card));
  border-color: hsl(var(--border));
}

/* Node specific styles */
.bot-node {
  min-width: 120px;
  padding: 12px;
}

.bot-node .node-header {
  font-weight: 600;
  font-size: 14px;
  margin-bottom: 8px;
  color: hsl(var(--foreground));
}

.bot-node .node-content {
  font-size: 12px;
  color: hsl(var(--muted-foreground));
}

.bot-node.start-node {
  border-color: hsl(var(--chart-1));
  background: hsl(var(--chart-1) / 0.1);
}

.bot-node.message-node {
  border-color: hsl(var(--chart-2));
  background: hsl(var(--chart-2) / 0.1);
}

.bot-node.command-node {
  border-color: hsl(var(--chart-3));
  background: hsl(var(--chart-3) / 0.1);
}

.bot-node.condition-node {
  border-color: hsl(var(--chart-4));
  background: hsl(var(--chart-4) / 0.1);
}

.bot-node.action-node {
  border-color: hsl(var(--chart-5));
  background: hsl(var(--chart-5) / 0.1);
}

.bot-node.end-node {
  border-color: hsl(var(--destructive));
  background: hsl(var(--destructive) / 0.1);
}

/* Handle styles */
.react-flow__handle {
  width: 8px;
  height: 8px;
  border: 2px solid hsl(var(--background));
  background: hsl(var(--primary));
}

.react-flow__handle:hover {
  background: hsl(var(--primary));
  transform: scale(1.2);
}

.react-flow__handle-connecting {
  background: hsl(var(--primary));
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}
