/**
 * @file: src/app/api/telegram/webhook/[projectId]/route.ts
 * @description: Webhook endpoint –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–æ–≤
 * @project: SaaS Bonus System
 * @dependencies: Next.js App Router, Grammy, BotManager
 * @created: 2024-12-31
 * @author: AI Assistant + User
 */

import { NextRequest, NextResponse } from 'next/server';
import { botManager } from '@/lib/telegram/bot-manager';

// POST /api/telegram/webhook/[projectId] - Webhook –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
export async function POST(
  request: NextRequest,
  { params }: { params: Promise<{ projectId: string }> }
) {
  try {
    const { projectId } = await params;

    // –ü–æ–ª—É—á–∞–µ–º webhook handler –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    const webhookHandler = botManager.getWebhookHandler(projectId);
    
    if (!webhookHandler) {
      console.error(`‚ùå Webhook handler –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ${projectId}`);
      return NextResponse.json(
        { error: 'Bot not found or inactive' },
        { status: 404 }
      );
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    const body = await request.text();
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Request –¥–ª—è Grammy
    const gramRequest = new Request(request.url, {
      method: 'POST',
      headers: request.headers,
      body: body
    });

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ Grammy webhook handler
    const response = await webhookHandler(gramRequest);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
    console.log(`üì® Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}`);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç
    return new NextResponse(response.body, {
      status: response.status,
      headers: response.headers
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º 200 –¥–ª—è Telegram, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
    return NextResponse.json({ ok: true }, { status: 200 });
  }
}

// GET /api/telegram/webhook/[projectId] - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è webhook
export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ projectId: string }> }
) {
  try {
    const { projectId } = await params;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞
    const botHealth = await botManager.checkBotHealth(projectId);
    
    return NextResponse.json({
      projectId,
      ...botHealth,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞' },
      { status: 500 }
    );
  }
}
